{"remainingRequest":"E:\\myapp\\project\\node_modules\\babel-loader\\lib\\index.js!E:\\myapp\\project\\src\\utils\\http.js","dependencies":[{"path":"E:\\myapp\\project\\src\\utils\\http.js","mtime":1565080667556},{"path":"E:\\myapp\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564670572446},{"path":"E:\\myapp\\project\\node_modules\\babel-loader\\lib\\index.js","mtime":1564670472168}],"contextDependencies":[],"result":["import axios from \"axios\";\nimport qs from \"qs\";\nimport loading from \"../lib/loading/index.js\";\nvar vm = loading();\nvar server = axios.create({\n  // baseURL:\"\",\n  timeout: 5000,\n  withCredentials: true\n});\nserver.interceptors.request.use(function (config) {\n  if (config.method.toUpperCase() == \"GET\") {// config.params = {...config.data}\n  } else if (config.method.toUpperCase() == \"POST\") {\n    config.headers[\"content-type\"] = \"appliaction/x-www-form-urlencoded\"; //config.data = qs.stringify(config.data)\n  }\n\n  vm.handlemount();\n  return config;\n}, function (err) {\n  Promise.reject(err);\n});\nserver.interceptors.response.use(function (res) {\n  if (res.statusText == \"OK\") {\n    vm.handleDestory();\n    return res.data;\n  }\n}, function (err) {\n  Promise.reject(err);\n});\nexport default (function (method, url) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (method.toUpperCase() == \"GET\") {\n    return server.get(url, {\n      params: data\n    });\n  } else if (method.toUpperCase() == \"POST\") {\n    return server.post(url, data);\n  }\n});",{"version":3,"sources":["E:\\myapp\\project\\src\\utils\\http.js"],"names":["axios","qs","loading","vm","server","create","timeout","withCredentials","interceptors","request","use","config","method","toUpperCase","headers","handlemount","err","Promise","reject","response","res","statusText","handleDestory","data","url","get","params","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,OAAP;AAEA,IAAIC,EAAE,GAAGD,OAAO,EAAhB;AACA,IAAME,MAAM,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACzB;AACCC,EAAAA,OAAO,EAAC,IAFgB;AAGxBC,EAAAA,eAAe,EAAC;AAHQ,CAAb,CAAf;AAOAH,MAAM,CAACI,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CAAgC,UAACC,MAAD,EAAU;AACtC,MAAGA,MAAM,CAACC,MAAP,CAAcC,WAAd,MAA+B,KAAlC,EAAwC,CACrC;AACF,GAFD,MAEM,IAAGF,MAAM,CAACC,MAAP,CAAcC,WAAd,MAA+B,MAAlC,EAAyC;AAC3CF,IAAAA,MAAM,CAACG,OAAP,CAAe,cAAf,IAAiC,mCAAjC,CAD2C,CAE3C;AACH;;AAEDX,EAAAA,EAAE,CAACY,WAAH;AAEA,SAAOJ,MAAP;AACH,CAXD,EAWE,UAACK,GAAD,EAAO;AACLC,EAAAA,OAAO,CAACC,MAAR,CAAeF,GAAf;AACH,CAbD;AAgBAZ,MAAM,CAACI,YAAP,CAAoBW,QAApB,CAA6BT,GAA7B,CAAiC,UAACU,GAAD,EAAO;AACpC,MAAGA,GAAG,CAACC,UAAJ,IAAkB,IAArB,EAA0B;AACvBlB,IAAAA,EAAE,CAACmB,aAAH;AAEC,WAAOF,GAAG,CAACG,IAAX;AACH;AAEJ,CAPD,EAOE,UAACP,GAAD,EAAO;AACLC,EAAAA,OAAO,CAACC,MAAR,CAAeF,GAAf;AACH,CATD;AAaA,gBAAe,UAACJ,MAAD,EAAQY,GAAR,EAAsB;AAAA,MAAVD,IAAU,uEAAL,EAAK;;AACjC,MAAGX,MAAM,CAACC,WAAP,MAAwB,KAA3B,EAAiC;AAC7B,WAAOT,MAAM,CAACqB,GAAP,CAAWD,GAAX,EAAe;AAClBE,MAAAA,MAAM,EAACH;AADW,KAAf,CAAP;AAGH,GAJD,MAIM,IAAGX,MAAM,CAACC,WAAP,MAAwB,MAA3B,EAAkC;AACpC,WAAOT,MAAM,CAACuB,IAAP,CAAYH,GAAZ,EAAgBD,IAAhB,CAAP;AACH;AACJ,CARD","sourcesContent":["import axios from \"axios\";\r\nimport qs from \"qs\"\r\nimport loading from \"../lib/loading/index.js\"\r\n\r\nlet vm = loading()\r\nconst server = axios.create({\r\n   // baseURL:\"\",\r\n    timeout:5000,\r\n    withCredentials:true\r\n})\r\n\r\n\r\nserver.interceptors.request.use((config)=>{\r\n    if(config.method.toUpperCase() == \"GET\"){\r\n       // config.params = {...config.data}\r\n    }else if(config.method.toUpperCase() == \"POST\"){\r\n        config.headers[\"content-type\"] = \"appliaction/x-www-form-urlencoded\";\r\n        //config.data = qs.stringify(config.data)\r\n    }\r\n    \r\n    vm.handlemount();\r\n\r\n    return config;\r\n},(err)=>{\r\n    Promise.reject(err);\r\n})\r\n\r\n\r\nserver.interceptors.response.use((res)=>{\r\n    if(res.statusText == \"OK\"){\r\n       vm.handleDestory();\r\n       \r\n        return res.data\r\n    }\r\n\r\n},(err)=>{\r\n    Promise.reject(err);\r\n})\r\n\r\n\r\n\r\nexport default (method,url,data={})=>{\r\n    if(method.toUpperCase() == \"GET\"){\r\n        return server.get(url,{\r\n            params:data\r\n        })\r\n    }else if(method.toUpperCase() == \"POST\"){\r\n        return server.post(url,data);\r\n    }\r\n}\r\n"]}]}